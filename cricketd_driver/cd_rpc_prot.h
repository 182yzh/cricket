/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CD_RPC_PROT_H_RPCGEN
#define _CD_RPC_PROT_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct int_result {
	int err;
	union {
		int data;
	} int_result_u;
};
typedef struct int_result int_result;

struct u64_result {
	int err;
	union {
		uint64_t u64;
	} u64_result_u;
};
typedef struct u64_result u64_result;

struct ptr_result {
	int err;
	union {
		uint64_t ptr;
	} ptr_result_u;
};
typedef struct ptr_result ptr_result;

struct ptr_ptr {
	uint64_t ptr1;
	uint64_t ptr2;
};
typedef struct ptr_ptr ptr_ptr;

struct str_result {
	int err;
	union {
		char *str;
	} str_result_u;
};
typedef struct str_result str_result;

struct uuid_result {
	int err;
	union {
		char bytes[16];
	} uuid_result_u;
};
typedef struct uuid_result uuid_result;

typedef struct {
	u_int rpc_uuid_len;
	char *rpc_uuid_val;
} rpc_uuid;

typedef struct {
	u_int mem_data_len;
	char *mem_data_val;
} mem_data;

struct rpc_cudevicegetattribute_1_argument {
	int arg1;
	int arg2;
};
typedef struct rpc_cudevicegetattribute_1_argument rpc_cudevicegetattribute_1_argument;

struct rpc_cumodulegetfunction_1_argument {
	uint64_t arg1;
	char *arg2;
};
typedef struct rpc_cumodulegetfunction_1_argument rpc_cumodulegetfunction_1_argument;

struct rpc_cumemcpyhtod_1_argument {
	uint64_t arg1;
	mem_data arg2;
};
typedef struct rpc_cumemcpyhtod_1_argument rpc_cumemcpyhtod_1_argument;

struct rpc_culaunchkernel_1_argument {
	uint64_t arg1;
	u_int arg2;
	u_int arg3;
	u_int arg4;
	u_int arg5;
	u_int arg6;
	u_int arg7;
	u_int arg8;
	uint64_t arg9;
	mem_data arg10;
};
typedef struct rpc_culaunchkernel_1_argument rpc_culaunchkernel_1_argument;

struct rpc_hidden_get_module_1_argument {
	uint64_t arg2;
	uint64_t arg3;
	uint64_t arg4;
	int arg5;
};
typedef struct rpc_hidden_get_module_1_argument rpc_hidden_get_module_1_argument;

struct rpc_hidden_1_3_1_argument {
	uint64_t arg1;
	uint64_t arg2;
};
typedef struct rpc_hidden_1_3_1_argument rpc_hidden_1_3_1_argument;

struct rpc_hidden_3_0_1_argument {
	int arg1;
	uint64_t arg2;
	uint64_t arg3;
};
typedef struct rpc_hidden_3_0_1_argument rpc_hidden_3_0_1_argument;

struct rpc_hidden_3_2_1_argument {
	int arg1;
	uint64_t arg2;
};
typedef struct rpc_hidden_3_2_1_argument rpc_hidden_3_2_1_argument;

#define RPC_CD_PROG 99
#define RPC_CD_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define PRINTMESSAGE 1
extern  enum clnt_stat printmessage_1(char *, int *, CLIENT *);
extern  bool_t printmessage_1_svc(char *, int *, struct svc_req *);
#define rpc_cuDeviceGetCount 2
extern  enum clnt_stat rpc_cudevicegetcount_1(int_result *, CLIENT *);
extern  bool_t rpc_cudevicegetcount_1_svc(int_result *, struct svc_req *);
#define rpc_cuInit 3
extern  enum clnt_stat rpc_cuinit_1(int , int *, CLIENT *);
extern  bool_t rpc_cuinit_1_svc(int , int *, struct svc_req *);
#define rpc_cuDriverGetVersion 4
extern  enum clnt_stat rpc_cudrivergetversion_1(int_result *, CLIENT *);
extern  bool_t rpc_cudrivergetversion_1_svc(int_result *, struct svc_req *);
#define rpc_cuDeviceGet 5
extern  enum clnt_stat rpc_cudeviceget_1(int , int_result *, CLIENT *);
extern  bool_t rpc_cudeviceget_1_svc(int , int_result *, struct svc_req *);
#define rpc_cuDeviceGetName 6
extern  enum clnt_stat rpc_cudevicegetname_1(int , str_result *, CLIENT *);
extern  bool_t rpc_cudevicegetname_1_svc(int , str_result *, struct svc_req *);
#define rpc_cuDeviceTotalMem 7
extern  enum clnt_stat rpc_cudevicetotalmem_1(int , u64_result *, CLIENT *);
extern  bool_t rpc_cudevicetotalmem_1_svc(int , u64_result *, struct svc_req *);
#define rpc_cuDeviceGetAttribute 8
extern  enum clnt_stat rpc_cudevicegetattribute_1(int , int , int_result *, CLIENT *);
extern  bool_t rpc_cudevicegetattribute_1_svc(int , int , int_result *, struct svc_req *);
#define rpc_cuDeviceGetUuid 9
extern  enum clnt_stat rpc_cudevicegetuuid_1(int , uuid_result *, CLIENT *);
extern  bool_t rpc_cudevicegetuuid_1_svc(int , uuid_result *, struct svc_req *);
#define rpc_cuCtxGetCurrent 10
extern  enum clnt_stat rpc_cuctxgetcurrent_1(ptr_result *, CLIENT *);
extern  bool_t rpc_cuctxgetcurrent_1_svc(ptr_result *, struct svc_req *);
#define rpc_cuCtxSetCurrent 11
extern  enum clnt_stat rpc_cuctxsetcurrent_1(uint64_t , int *, CLIENT *);
extern  bool_t rpc_cuctxsetcurrent_1_svc(uint64_t , int *, struct svc_req *);
#define rpc_cuDevicePrimaryCtxRetain 12
extern  enum clnt_stat rpc_cudeviceprimaryctxretain_1(int , ptr_result *, CLIENT *);
extern  bool_t rpc_cudeviceprimaryctxretain_1_svc(int , ptr_result *, struct svc_req *);
#define rpc_cuModuleGetFunction 13
extern  enum clnt_stat rpc_cumodulegetfunction_1(uint64_t , char *, ptr_result *, CLIENT *);
extern  bool_t rpc_cumodulegetfunction_1_svc(uint64_t , char *, ptr_result *, struct svc_req *);
#define rpc_cuGetExportTable 14
extern  enum clnt_stat rpc_cugetexporttable_1(rpc_uuid , ptr_result *, CLIENT *);
extern  bool_t rpc_cugetexporttable_1_svc(rpc_uuid , ptr_result *, struct svc_req *);
#define rpc_cuMemAlloc 15
extern  enum clnt_stat rpc_cumemalloc_1(uint64_t , ptr_result *, CLIENT *);
extern  bool_t rpc_cumemalloc_1_svc(uint64_t , ptr_result *, struct svc_req *);
#define rpc_cuCtxGetDevice 16
extern  enum clnt_stat rpc_cuctxgetdevice_1(int_result *, CLIENT *);
extern  bool_t rpc_cuctxgetdevice_1_svc(int_result *, struct svc_req *);
#define rpc_cuMemcpyHtoD 17
extern  enum clnt_stat rpc_cumemcpyhtod_1(uint64_t , mem_data , int *, CLIENT *);
extern  bool_t rpc_cumemcpyhtod_1_svc(uint64_t , mem_data , int *, struct svc_req *);
#define rpc_cuLaunchKernel 18
extern  enum clnt_stat rpc_culaunchkernel_1(uint64_t , u_int , u_int , u_int , u_int , u_int , u_int , u_int , uint64_t , mem_data , int *, CLIENT *);
extern  bool_t rpc_culaunchkernel_1_svc(uint64_t , u_int , u_int , u_int , u_int , u_int , u_int , u_int , uint64_t , mem_data , int *, struct svc_req *);
#define rpc_hidden_get_device_ctx 101
extern  enum clnt_stat rpc_hidden_get_device_ctx_1(int , ptr_result *, CLIENT *);
extern  bool_t rpc_hidden_get_device_ctx_1_svc(int , ptr_result *, struct svc_req *);
#define rpc_hidden_get_module 105
extern  enum clnt_stat rpc_hidden_get_module_1(uint64_t , uint64_t , uint64_t , int , ptr_result *, CLIENT *);
extern  bool_t rpc_hidden_get_module_1_svc(uint64_t , uint64_t , uint64_t , int , ptr_result *, struct svc_req *);
#define rpc_hidden_1_1 111
extern  enum clnt_stat rpc_hidden_1_1_1(ptr_result *, CLIENT *);
extern  bool_t rpc_hidden_1_1_1_svc(ptr_result *, struct svc_req *);
#define rpc_hidden_1_3 113
extern  enum clnt_stat rpc_hidden_1_3_1(uint64_t , uint64_t , void *, CLIENT *);
extern  bool_t rpc_hidden_1_3_1_svc(uint64_t , uint64_t , void *, struct svc_req *);
#define rpc_hidden_1_5 115
extern  enum clnt_stat rpc_hidden_1_5_1(ptr_result *, CLIENT *);
extern  bool_t rpc_hidden_1_5_1_svc(ptr_result *, struct svc_req *);
#define rpc_hidden_2_1 121
extern  enum clnt_stat rpc_hidden_2_1_1(uint64_t , void *, CLIENT *);
extern  bool_t rpc_hidden_2_1_1_svc(uint64_t , void *, struct svc_req *);
#define rpc_hidden_3_0 130
extern  enum clnt_stat rpc_hidden_3_0_1(int , uint64_t , uint64_t , int *, CLIENT *);
extern  bool_t rpc_hidden_3_0_1_svc(int , uint64_t , uint64_t , int *, struct svc_req *);
#define rpc_hidden_3_2 132
extern  enum clnt_stat rpc_hidden_3_2_1(int , uint64_t , ptr_result *, CLIENT *);
extern  bool_t rpc_hidden_3_2_1_svc(int , uint64_t , ptr_result *, struct svc_req *);
extern int rpc_cd_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define PRINTMESSAGE 1
extern  enum clnt_stat printmessage_1();
extern  bool_t printmessage_1_svc();
#define rpc_cuDeviceGetCount 2
extern  enum clnt_stat rpc_cudevicegetcount_1();
extern  bool_t rpc_cudevicegetcount_1_svc();
#define rpc_cuInit 3
extern  enum clnt_stat rpc_cuinit_1();
extern  bool_t rpc_cuinit_1_svc();
#define rpc_cuDriverGetVersion 4
extern  enum clnt_stat rpc_cudrivergetversion_1();
extern  bool_t rpc_cudrivergetversion_1_svc();
#define rpc_cuDeviceGet 5
extern  enum clnt_stat rpc_cudeviceget_1();
extern  bool_t rpc_cudeviceget_1_svc();
#define rpc_cuDeviceGetName 6
extern  enum clnt_stat rpc_cudevicegetname_1();
extern  bool_t rpc_cudevicegetname_1_svc();
#define rpc_cuDeviceTotalMem 7
extern  enum clnt_stat rpc_cudevicetotalmem_1();
extern  bool_t rpc_cudevicetotalmem_1_svc();
#define rpc_cuDeviceGetAttribute 8
extern  enum clnt_stat rpc_cudevicegetattribute_1();
extern  bool_t rpc_cudevicegetattribute_1_svc();
#define rpc_cuDeviceGetUuid 9
extern  enum clnt_stat rpc_cudevicegetuuid_1();
extern  bool_t rpc_cudevicegetuuid_1_svc();
#define rpc_cuCtxGetCurrent 10
extern  enum clnt_stat rpc_cuctxgetcurrent_1();
extern  bool_t rpc_cuctxgetcurrent_1_svc();
#define rpc_cuCtxSetCurrent 11
extern  enum clnt_stat rpc_cuctxsetcurrent_1();
extern  bool_t rpc_cuctxsetcurrent_1_svc();
#define rpc_cuDevicePrimaryCtxRetain 12
extern  enum clnt_stat rpc_cudeviceprimaryctxretain_1();
extern  bool_t rpc_cudeviceprimaryctxretain_1_svc();
#define rpc_cuModuleGetFunction 13
extern  enum clnt_stat rpc_cumodulegetfunction_1();
extern  bool_t rpc_cumodulegetfunction_1_svc();
#define rpc_cuGetExportTable 14
extern  enum clnt_stat rpc_cugetexporttable_1();
extern  bool_t rpc_cugetexporttable_1_svc();
#define rpc_cuMemAlloc 15
extern  enum clnt_stat rpc_cumemalloc_1();
extern  bool_t rpc_cumemalloc_1_svc();
#define rpc_cuCtxGetDevice 16
extern  enum clnt_stat rpc_cuctxgetdevice_1();
extern  bool_t rpc_cuctxgetdevice_1_svc();
#define rpc_cuMemcpyHtoD 17
extern  enum clnt_stat rpc_cumemcpyhtod_1();
extern  bool_t rpc_cumemcpyhtod_1_svc();
#define rpc_cuLaunchKernel 18
extern  enum clnt_stat rpc_culaunchkernel_1();
extern  bool_t rpc_culaunchkernel_1_svc();
#define rpc_hidden_get_device_ctx 101
extern  enum clnt_stat rpc_hidden_get_device_ctx_1();
extern  bool_t rpc_hidden_get_device_ctx_1_svc();
#define rpc_hidden_get_module 105
extern  enum clnt_stat rpc_hidden_get_module_1();
extern  bool_t rpc_hidden_get_module_1_svc();
#define rpc_hidden_1_1 111
extern  enum clnt_stat rpc_hidden_1_1_1();
extern  bool_t rpc_hidden_1_1_1_svc();
#define rpc_hidden_1_3 113
extern  enum clnt_stat rpc_hidden_1_3_1();
extern  bool_t rpc_hidden_1_3_1_svc();
#define rpc_hidden_1_5 115
extern  enum clnt_stat rpc_hidden_1_5_1();
extern  bool_t rpc_hidden_1_5_1_svc();
#define rpc_hidden_2_1 121
extern  enum clnt_stat rpc_hidden_2_1_1();
extern  bool_t rpc_hidden_2_1_1_svc();
#define rpc_hidden_3_0 130
extern  enum clnt_stat rpc_hidden_3_0_1();
extern  bool_t rpc_hidden_3_0_1_svc();
#define rpc_hidden_3_2 132
extern  enum clnt_stat rpc_hidden_3_2_1();
extern  bool_t rpc_hidden_3_2_1_svc();
extern int rpc_cd_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_int_result (XDR *, int_result*);
extern  bool_t xdr_u64_result (XDR *, u64_result*);
extern  bool_t xdr_ptr_result (XDR *, ptr_result*);
extern  bool_t xdr_ptr_ptr (XDR *, ptr_ptr*);
extern  bool_t xdr_str_result (XDR *, str_result*);
extern  bool_t xdr_uuid_result (XDR *, uuid_result*);
extern  bool_t xdr_rpc_uuid (XDR *, rpc_uuid*);
extern  bool_t xdr_mem_data (XDR *, mem_data*);
extern  bool_t xdr_rpc_cudevicegetattribute_1_argument (XDR *, rpc_cudevicegetattribute_1_argument*);
extern  bool_t xdr_rpc_cumodulegetfunction_1_argument (XDR *, rpc_cumodulegetfunction_1_argument*);
extern  bool_t xdr_rpc_cumemcpyhtod_1_argument (XDR *, rpc_cumemcpyhtod_1_argument*);
extern  bool_t xdr_rpc_culaunchkernel_1_argument (XDR *, rpc_culaunchkernel_1_argument*);
extern  bool_t xdr_rpc_hidden_get_module_1_argument (XDR *, rpc_hidden_get_module_1_argument*);
extern  bool_t xdr_rpc_hidden_1_3_1_argument (XDR *, rpc_hidden_1_3_1_argument*);
extern  bool_t xdr_rpc_hidden_3_0_1_argument (XDR *, rpc_hidden_3_0_1_argument*);
extern  bool_t xdr_rpc_hidden_3_2_1_argument (XDR *, rpc_hidden_3_2_1_argument*);

#else /* K&R C */
extern bool_t xdr_int_result ();
extern bool_t xdr_u64_result ();
extern bool_t xdr_ptr_result ();
extern bool_t xdr_ptr_ptr ();
extern bool_t xdr_str_result ();
extern bool_t xdr_uuid_result ();
extern bool_t xdr_rpc_uuid ();
extern bool_t xdr_mem_data ();
extern bool_t xdr_rpc_cudevicegetattribute_1_argument ();
extern bool_t xdr_rpc_cumodulegetfunction_1_argument ();
extern bool_t xdr_rpc_cumemcpyhtod_1_argument ();
extern bool_t xdr_rpc_culaunchkernel_1_argument ();
extern bool_t xdr_rpc_hidden_get_module_1_argument ();
extern bool_t xdr_rpc_hidden_1_3_1_argument ();
extern bool_t xdr_rpc_hidden_3_0_1_argument ();
extern bool_t xdr_rpc_hidden_3_2_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CD_RPC_PROT_H_RPCGEN */
